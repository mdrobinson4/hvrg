# allows low-latency, bidirectional communication layer between clients (web browsers) and servers
roslaunch rosbridge_server rosbridge_websocket.launch 

rosrun rosserial_arduino serial_node.py _port:=/dev/ttyACM0


# install ros_bridge
sudo apt-get install ros-melodic-rosbridge-server

# install rosserial
sudo apt-get install ros-melodic-rosserial-arduino
sudo apt-get install ros-melodic-rosserial
cd <ws>/src
git clone https://github.com/ros-drivers/rosserial.git
cd <ws>
catkin_make
catkin_make install
cd <sketchbook>/libraries
rm -rf ros_lib
rosrun rosserial_arduino make_libraries.py .

rosrun rqt_graph rqt_graph

catkin_make
source ./devel/setup.bash
rosrun beginner_tutorials talker.py

# Arduino ros <-> [ros_bridge] <-> unity (ros-sharp)
# a collection of nodes and programs that are pre-requisites of a ROS-based system. 
# roscore is used to allow ROS nodes to communicate. roslaunch automatically launches roscore
roscore

# list all of the topics
rostopic list

rosrun rosserial_arduino serial_node.py _port:=/dev/ttyACM0

# listen to a topic
rostopic echo chatter

# setup workspacecatkin
source /opt/ros/melodic/setup.bash
mkdir -p /catkin_ws/src
cd /catkin_ws/
catkin_make
source devel/setup.bash
echo $ROS_PACKAGE_PATH

# create package
cd /catkin_ws/src
catkin_create_pkg beginner_tutorials std_msgs rospy roscpp
cd /catkin_ws
catkin_make
rospack depends1 beginner_tutorials 

# build package
# In a catkin workspace
catkin_make
catkin_make install  # (optionally)
cd ~/catkin_ws/
ls src
catkin_make

# create nodes
roscd beginner_tutorials
mkdir scripts
cd scripts
wget https://raw.github.com/ros/ros_tutorials/kinetic-devel/rospy_tutorials/001_talker_listener/talker.py
chmod +x talker.py
# Add the following to your CMakeLists.txt. This makes sure the python script gets installed properly, 
# and uses the right python interpreter.

catkin_install_python(PROGRAMS scripts/talker.py scripts/listener.py
  DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
)

// needed unity subscribers
std_msgs::Int16MultiArray finger_vals;
std_msgs::Int16 middle_vals;
geometry_msgs::Vector3 imuForearm;
geometry_msgs::Vector3 imuUpperarm;
geometry_msgs::Vector3 imuWrist;

geometry_msgs::Quaternion imuUpperarmQ;
geometry_msgs::Quaternion imuForearmQ;
geometry_msgs::Quaternion imuWristQ;

std_msgs::Int16 cal;


